<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.vitalijr2.ytimebot</groupId>
  <artifactId>google-cloud-ytimebot</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <name>YouTube Time Bot</name>
  <description>YouTube Time Bot (ytimebot), Google Cloud Function</description>

  <properties>
    <feign.version>13.2.1</feign.version>
    <java.version>17</java.version>
    <junit-jupiter.version>5.10.2</junit-jupiter.version>
    <mockito.version>5.12.0</mockito.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <slf4j.version>2.0.13</slf4j.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <version>24.1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.cloud.functions</groupId>
      <artifactId>functions-framework-api</artifactId>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20240303</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>${slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.github.openfeign</groupId>
      <artifactId>feign-core</artifactId>
      <version>${feign.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.openfeign</groupId>
      <artifactId>feign-java11</artifactId>
      <version>${feign.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.openfeign</groupId>
      <artifactId>feign-json</artifactId>
      <version>${feign.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.openfeign</groupId>
      <artifactId>feign-slf4j</artifactId>
      <version>${feign.version}</version>
    </dependency>
    <!-- test -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ocarlsen.test</groupId>
      <artifactId>mock-slf4j-impl</artifactId>
      <version>2.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.github.openfeign</groupId>
      <artifactId>feign-mock</artifactId>
      <version>${feign.version}</version>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>clean verify</defaultGoal>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.3.2</version>
      </plugin>
      <plugin><configuration>
          <rules>
            <requireJavaVersion>
              <version>[${java.version},)</version>
            </requireJavaVersion>
            <requireMavenVersion>
              <version>[3.9.0,)</version>
            </requireMavenVersion>
          </rules>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <id>enforce-maven</id>
          </execution>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <id>enforce-clean</id>
            <phase>pre-clean</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tidy-maven-plugin</artifactId>
        <version>1.3.0</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin><configuration>
          <flattenMode>ossrh</flattenMode>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>flatten</goal>
            </goals>
            <id>flatten</id>
            <phase>process-resources</phase>
          </execution>
          <execution>
            <goals>
              <goal>clean</goal>
            </goals>
            <id>clean</id>
            <phase>clean</phase>
          </execution>
        </executions>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.6.0</version>
      </plugin>
      <plugin><configuration>
          <propertiesEncoding>ISO-8859-1</propertiesEncoding>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
      </plugin>
      <plugin><configuration>
          <release>${java.version}</release>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
      </plugin>
      <plugin><configuration>
          <classpathDependencyExcludes>
            <classpathDependencyExclude>org.slf4j:slf4j-jdk14</classpathDependencyExclude>
          </classpathDependencyExcludes>
          <properties>
            <groups>fast</groups>
          </properties>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
      </plugin>
      <plugin><configuration>
          <archive>
            <manifestEntries>
              <Created-By>${java.vm.version} (${java.vm.vendor})</Created-By>
              <Name>${project.name}</Name>
            </manifestEntries>
          </archive>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.4.1</version>
      </plugin>
      <plugin><configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>module-info.class</exclude>
                <exclude>META-INF/MANIFEST.MF</exclude>
                <exclude>META-INF/**/module-info.class</exclude>
                <exclude>META-INF/**/pom.properties</exclude>
                <exclude>META-INF/**/pom.xml</exclude>
              </excludes>
            </filter>
          </filters>
          <transformers>
            <transformer
              implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer">
            </transformer>
            <transformer
              implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
            </transformer>
            <transformer
              implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <manifestEntries>
                <Homepage>${project.url}</Homepage>
              </manifestEntries>
            </transformer>
            <transformer
              implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer">
            </transformer>
          </transformers>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.5.3</version>
      </plugin>
      <plugin><configuration>
          <classpathDependencyExcludes>
            <classpathDependencyExclude>com.ocarlsen.test:mock-slf4j-impl
            </classpathDependencyExclude>
          </classpathDependencyExcludes>
          <forkCount>1</forkCount>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <properties>
            <groups>slow</groups>
          </properties>
          <reuseForks>false</reuseForks>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.5</version>
      </plugin>
      <plugin><executions>
          <execution>
            <configuration>
              <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
            </configuration>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <id>prepare-agent</id>
          </execution>
          <execution>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <id>prepare-agent-integration</id>
          </execution>
          <execution>
            <configuration>
              <destFile>${project.build.directory}/jacoco.exec</destFile>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>*.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
            </configuration>
            <goals>
              <goal>merge</goal>
            </goals>
            <id>merge-results</id>
            <phase>verify</phase>
          </execution>
          <execution>
            <configuration>
              <dataFile>${project.build.directory}/jacoco.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
            </configuration>
            <goals>
              <goal>report</goal>
            </goals>
            <id>report</id>
            <phase>verify</phase>
          </execution>
          <execution>
            <configuration>
              <dataFile>${project.build.directory}/jacoco.exec</dataFile>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>COMPLEXITY</counter>
                      <minimum>0.72</minimum>
                      <value>COVEREDRATIO</value>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
            <id>check-coverage</id>
            <phase>verify</phase>
          </execution>
        </executions>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.12</version>
      </plugin>
      <plugin><configuration>
          <functionTarget>io.github.vitalijr2.ytimebot.telegram.TelegramBotFunction</functionTarget>
        </configuration>
        <groupId>com.google.cloud.functions</groupId>
        <artifactId>function-maven-plugin</artifactId>
        <version>0.11.0</version>
      </plugin>
    </plugins>
  </build>
</project>
